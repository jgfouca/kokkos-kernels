//@HEADER
// ************************************************************************
//
//                        Kokkos v. 4.0
//       Copyright (2022) National Technology & Engineering
//               Solutions of Sandia, LLC (NTESS).
//
// Under the terms of Contract DE-NA0003525 with NTESS,
// the U.S. Government retains certain rights in this software.
//
// Part of Kokkos, under the Apache License v2.0 with LLVM Exceptions.
// See https://kokkos.org/LICENSE for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//@HEADER

#include "KokkosKernels_IOUtils.hpp"

#include <fstream>

namespace Test {

struct TestIOUtils {

  using size_type = size_t;
  using lno_t     = int;
  using scalar_t  = double;

  using exe_space   = Kokkos::DefaultHostExecutionSpace;
  using mem_space   = typename exe_space::memory_space;
  using host_device = Kokkos::Device<exe_space, mem_space>;

  using RowMapType  = Kokkos::View<size_type*, host_device>;
  using EntriesType = Kokkos::View<lno_t*, host_device>;
  using ValuesType  = Kokkos::View<scalar_t*, host_device>;

  using sp_matrix_type =
    KokkosSparse::CrsMatrix<scalar_t, lno_t, host_device, void, size_type>;

  static void test()
  {
    // HB matrix to test
    static const char* TEXT =
      "1SYMMETRIC MATRIX, FE APPROXIMATION TO BIHARMONIC OPERATOR ON BEAM.     NOS1    \n"
      "           181            15            40           126             0          \n"
      "RSA                      237           237           627             0          \n"
      "(16I5)          (16I5)          (5E16.8)                                        \n"
      "    1    3    6    9   11   14   17   19   22   25   27   30   33   35   38   41\n"
      "   43   46   49   51   54   57   59   62   65   67   70   73   75   78   81   83\n"
      "   86   89   91   94   97   99  102  105  107  110  113  115  118  121  123  126\n"
      "  129  131  134  137  139  142  145  147  150  153  155  158  161  163  166  169\n"
      "  171  174  177  179  182  185  187  190  193  195  198  201  203  206  209  211\n"
      "  214  217  219  222  225  227  230  233  235  238  241  243  246  249  251  254\n"
      "  257  259  262  265  267  270  273  275  278  281  283  286  289  291  294  297\n"
      "  299  302  305  307  310  313  315  318  321  323  326  329  331  334  337  339\n"
      "  342  345  347  350  353  355  358  361  363  366  369  371  374  377  379  382\n"
      "  385  387  390  393  395  398  401  403  406  409  411  414  417  419  422  425\n"
      "  427  430  433  435  438  441  443  446  449  451  454  457  459  462  465  467\n"
      "  470  473  475  478  481  483  486  489  491  494  497  499  502  505  507  510\n"
      "  513  515  518  521  523  526  529  531  534  537  539  542  545  547  550  553\n"
      "  555  558  561  563  566  569  571  574  577  579  582  585  587  590  593  595\n"
      "  598  601  603  606  609  611  614  617  619  622  625  626  627  628          \n"
      "    1    4    2    5    6    3    5    6    4    7    5    8    9    6    8    9\n"
      "    7   10    8   11   12    9   11   12   10   13   11   14   15   12   14   15\n"
      "   13   16   14   17   18   15   17   18   16   19   17   20   21   18   20   21\n"
      "   19   22   20   23   24   21   23   24   22   25   23   26   27   24   26   27\n"
      "   25   28   26   29   30   27   29   30   28   31   29   32   33   30   32   33\n"
      "   31   34   32   35   36   33   35   36   34   37   35   38   39   36   38   39\n"
      "   37   40   38   41   42   39   41   42   40   43   41   44   45   42   44   45\n"
      "   43   46   44   47   48   45   47   48   46   49   47   50   51   48   50   51\n"
      "   49   52   50   53   54   51   53   54   52   55   53   56   57   54   56   57\n"
      "   55   58   56   59   60   57   59   60   58   61   59   62   63   60   62   63\n"
      "   61   64   62   65   66   63   65   66   64   67   65   68   69   66   68   69\n"
      "   67   70   68   71   72   69   71   72   70   73   71   74   75   72   74   75\n"
      "   73   76   74   77   78   75   77   78   76   79   77   80   81   78   80   81\n"
      "   79   82   80   83   84   81   83   84   82   85   83   86   87   84   86   87\n"
      "   85   88   86   89   90   87   89   90   88   91   89   92   93   90   92   93\n"
      "   91   94   92   95   96   93   95   96   94   97   95   98   99   96   98   99\n"
      "   97  100   98  101  102   99  101  102  100  103  101  104  105  102  104  105\n"
      "  103  106  104  107  108  105  107  108  106  109  107  110  111  108  110  111\n"
      "  109  112  110  113  114  111  113  114  112  115  113  116  117  114  116  117\n"
      "  115  118  116  119  120  117  119  120  118  121  119  122  123  120  122  123\n"
      "  121  124  122  125  126  123  125  126  124  127  125  128  129  126  128  129\n"
      "  127  130  128  131  132  129  131  132  130  133  131  134  135  132  134  135\n"
      "  133  136  134  137  138  135  137  138  136  139  137  140  141  138  140  141\n"
      "  139  142  140  143  144  141  143  144  142  145  143  146  147  144  146  147\n"
      "  145  148  146  149  150  147  149  150  148  151  149  152  153  150  152  153\n"
      "  151  154  152  155  156  153  155  156  154  157  155  158  159  156  158  159\n"
      "  157  160  158  161  162  159  161  162  160  163  161  164  165  162  164  165\n"
      "  163  166  164  167  168  165  167  168  166  169  167  170  171  168  170  171\n"
      "  169  172  170  173  174  171  173  174  172  175  173  176  177  174  176  177\n"
      "  175  178  176  179  180  177  179  180  178  181  179  182  183  180  182  183\n"
      "  181  184  182  185  186  183  185  186  184  187  185  188  189  186  188  189\n"
      "  187  190  188  191  192  189  191  192  190  193  191  194  195  192  194  195\n"
      "  193  196  194  197  198  195  197  198  196  199  197  200  201  198  200  201\n"
      "  199  202  200  203  204  201  203  204  202  205  203  206  207  204  206  207\n"
      "  205  208  206  209  210  207  209  210  208  211  209  212  213  210  212  213\n"
      "  211  214  212  215  216  213  215  216  214  217  215  218  219  216  218  219\n"
      "  217  220  218  221  222  219  221  222  220  223  221  224  225  222  224  225\n"
      "  223  226  224  227  228  225  227  228  226  229  227  230  231  228  230  231\n"
      "  229  232  230  233  234  231  233  234  232  235  233  236  237  234  236  237\n"
      "  235  236  237                                                                 \n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008   .64000000+007\n"
      "  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005   .12288000+010\n"
      "  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008   .16000000+007\n"
      "   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009   .38400000+008\n"
      "   .64000000+007  -.38400000+008   .16000000+007   .16000000+006  -.80000000+005\n"
      "   .12288000+010  -.61440000+009   .38400000+008   .64000000+007  -.38400000+008\n"
      "   .16000000+007   .16000000+006  -.80000000+005   .12288000+010  -.61440000+009\n"
      "   .38400000+008   .64000000+007  -.38400000+008   .16000000+007   .16000000+006\n"
      "   .12288000+010   .64000000+007                                                ";

    // Write hb file text
    const char* hb_filename = "test_sparse_ioutils.hb";
    std::ofstream out(hb_filename);
    out << TEXT;
    out.close();

    // Read hb matrix
    auto A1 = KokkosSparse::Impl::read_kokkos_crst_matrix<sp_matrix_type>(hb_filename);

    // Write matrix as matrix market
    const char* mm_filename = "test_sparse_ioutils.mtx";
    KokkosSparse::Impl::write_kokkos_crst_matrix(A1, mm_filename);

    // Read matrix2 from matrix market
    auto A2 = KokkosSparse::Impl::read_kokkos_crst_matrix<sp_matrix_type>(mm_filename);

    // Compare matrices
    auto row_map1 = A1.graph.row_map;
    auto entries1 = A1.graph.entries;
    auto values1  = A1.values;
    auto row_map2 = A2.graph.row_map;
    auto entries2 = A2.graph.entries;
    auto values2  = A2.values;
    EXPECT_EQ(row_map1.size(), row_map2.size());
    EXPECT_EQ(entries1.size(), entries2.size());
    EXPECT_EQ(values1.size(),  values2.size());
    EXPECT_EQ(values1.size(),  entries1.size());
    for (size_type i = 0; i < row_map1.size(); ++i) {
      EXPECT_EQ(row_map1(i), row_map2(i));
    }
    for (size_type i = 0; i < entries1.size(); ++i) {
      EXPECT_EQ(entries1(i), entries2(i));
      EXPECT_EQ(values1(i), values2(i));
    }
  }

};

// Test randomly generated Cs matrices
TEST_F(TestCategory, sparse_ioutils) {
  TestIOUtils::test();
}

}  // namespace Test
